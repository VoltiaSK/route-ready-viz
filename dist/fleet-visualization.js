var r=Object.defineProperty;var d=(n,l,e)=>l in n?r(n,l,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[l]=e;var i=(n,l,e)=>d(n,typeof l!="symbol"?l+"":l,e);import{q as c,n as h,F as u}from"./assets/FleetVisualization-CeWtVhZL.js";class m extends HTMLElement{constructor(){super(...arguments);i(this,"root",null);i(this,"_jsonUrl",null);i(this,"shadowContainer",null);i(this,"stylesElement",null)}static get observedAttributes(){return["data-url"]}get jsonUrl(){return this._jsonUrl}set jsonUrl(e){this._jsonUrl=e,this.render()}connectedCallback(){console.log("FleetVisualization web component connecting to DOM"),this.shadowContainer=document.createElement("div"),this.shadowContainer.style.width="100%",this.shadowContainer.style.height="100%",this.appendChild(this.shadowContainer),this._jsonUrl=this.getAttribute("data-url"),this.loadStyles(),setTimeout(()=>{this.shadowContainer&&(console.log("Creating React root for FleetVisualization"),this.root=c.createRoot(this.shadowContainer),this.render())},100)}attributeChangedCallback(e,t,s){e==="data-url"&&t!==s&&(console.log("FleetVisualization data-url changed:",s),this._jsonUrl=s,this.render())}disconnectedCallback(){console.log("FleetVisualization web component disconnecting from DOM"),this.root&&(this.root.unmount(),this.root=null),this.stylesElement&&document.head.contains(this.stylesElement)&&document.head.removeChild(this.stylesElement)}getBaseUrl(){const e=document.getElementsByTagName("script");let t="";for(let s=0;s<e.length;s++)if(e[s].src&&e[s].src.includes("fleet-visualization")){t=e[s].src;break}return t?t.substring(0,t.lastIndexOf("/")):(console.warn("Could not find fleet-visualization script tag. Using current origin instead."),window.location.origin)}loadStyles(){if(document.getElementById("fleet-visualization-styles")){console.log("Fleet visualization styles already loaded");return}this.stylesElement=document.createElement("link"),this.stylesElement.id="fleet-visualization-styles",this.stylesElement.rel="stylesheet";const t=this.getBaseUrl();this.findAndLoadCssFile(t)}findAndLoadCssFile(e){const t=new XMLHttpRequest;t.open("GET",`${e}/assets/`,!0),t.onreadystatechange=()=>{var s;if(t.readyState===4)if(t.status===200){const a=/main-[A-Za-z0-9_-]+\.css/g,o=t.responseText.match(a);o&&o.length>0?this.loadCssFile(`${e}/assets/${o[0]}`):this.loadCssFile(`${e}/assets/main.css`)}else this.loadCssFile(`${e}/assets/main.css`),(s=this.stylesElement)==null||s.addEventListener("error",()=>{this.loadCssFile(`${e}/main.css`)})};try{t.send()}catch(s){console.warn("Failed to list directory, trying default CSS paths:",s),this.loadCssFile(`${e}/assets/main.css`)}}loadCssFile(e){this.stylesElement&&(this.stylesElement.href=e,this.stylesElement.onload=()=>console.log("Fleet visualization styles loaded successfully from:",e),this.stylesElement.onerror=t=>{if(console.error("Failed to load fleet visualization styles:",t),e.includes("-")){const s=e.replace(/main-[A-Za-z0-9_-]+\.css/,"main.css");console.log("Trying fallback CSS URL:",s),this.loadCssFile(s)}},document.head.appendChild(this.stylesElement),console.log("Component styles loading from:",this.stylesElement.href))}render(){if(!this.root){console.warn("Cannot render FleetVisualization - React root not created yet");return}console.log("Rendering FleetVisualization with jsonUrl:",this._jsonUrl),this.root.render(h.createElement(u,{jsonUrl:this._jsonUrl||void 0}))}}customElements.get("fleet-visualization")||(console.log("Defining fleet-visualization custom element"),customElements.define("fleet-visualization",m));console.log("Fleet Visualization Web Component loaded");window.addEventListener("DOMContentLoaded",()=>{console.log("DOM fully loaded, Fleet Visualization Web Component ready");const n=document.getElementsByTagName("fleet-visualization");console.log(`Found ${n.length} fleet-visualization elements on the page`)});
